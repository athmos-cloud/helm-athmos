apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "infra-worker.fullname" . }}
  labels:
    {{- include "infra-worker.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "infra-worker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "infra-worker.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "infra-worker.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: {{ toYaml .Values.command | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http
          readinessProbe:
            httpGet:
              path: /ready
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- range .Values.env.secrets }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .secretKey }}
          {{- end }}
          {{- with .Values.config }}
            - name: {{ .envVariableName }}
              value: {{ printf "%s/%s" .folder .filename | quote }}
          {{- end }}
          {{- with .Values.kubeConfig }}
            - name: {{ .envVariableName }}
              value: {{ printf "%s/%s"  .folder .filename | quote }}
          {{- end }}
            - name: PORT
              value: "{{ .Values.service.port }}"
          volumeMounts:
            - name: config-volume
              mountPath: {{ .Values.config.folder }}
              readOnly: true
            - name: kubeconfig-volume
              mountPath: {{ .Values.kubeConfig.folder }}
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.config.name }}
        - name: kubeconfig-volume
          secret:
            secretName: {{ .Values.kubeConfig.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
